<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.jee.alaska</groupId>
		<artifactId>alaska-parent</artifactId>
		<version>2.0.0</version>
	</parent>
	<artifactId>alaska-sso-ticket-service</artifactId>
	<packaging>war</packaging>
	
	<build>
		<plugins>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-deploy-plugin</artifactId>
		        <configuration>
		            <skip>true</skip>
		        </configuration>
		    </plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
                    <!-- 详见：https://github.com/spotify/docker-maven-plugin    Invalid repository name ... only [a-z0-9-_.] are allowed-->
                    <imageName>${project.name}</imageName>
                    <baseImage>registry.cn-shenzhen.aliyuncs.com/xmh/java</baseImage>
                    <dockerHost>${docker.host}</dockerHost>
                    <entryPoint>["java", "-jar", "/${project.build.finalName}.war"]</entryPoint>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.war</include>
                        </resource>
                    </resources>
                    <forceTags>true</forceTags>
                </configuration>
            </plugin>
		</plugins>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/application*.yml</include>
					<include>**/bootstrap.yml</include>
					<include>**/logback-spring.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/application*.yml</exclude>
					<exclude>**/bootstrap.yml</exclude>
					<exclude>**/logback-spring.xml</exclude>
				</excludes>
			</resource>
		</resources>
	</build>
	
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<eureka.service.url>http://192.168.10.40:8761/eureka/</eureka.service.url>
				<docker.host>http://192.168.10.40:2376</docker.host>
			</properties>
		</profile>
		<profile>
			<id>pro</id>
			<properties>
				<eureka.service.url>http://192.168.10.50:8761/eureka/</eureka.service.url>
				<docker.host>http://192.168.10.50:2376</docker.host>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-client</artifactId>
        </dependency>
		<dependency>
			<groupId>io.jee.alaska</groupId>
			<artifactId>alaska-sso</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

</project>